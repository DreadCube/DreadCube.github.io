{"version":3,"sources":["ball.js","kicker.js","game.js","App.js","index.js"],"names":["Ball","game","options","this","ball","matter","add","image","x","y","setBounce","setVelocityX","setVelocityY","Kicker","kicker","setScale","setAngle","left","setFrictionAir","console","log","body","restitution","allowGravity","update","bind","cursors","input","keyboard","createCursorKeys","up","isDown","setVelocity","down","Game","GAME_WIDTH","GAME_HEIGHT","config","type","Phaser","AUTO","width","height","physics","default","debug","gravity","scene","preload","create","load","world","setBounds","background","setOrigin","kicker1","kicker2","kicker3","kicker4","App","useEffect","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAUeA,EATb,WAAYC,GAAqB,IAAfC,EAAc,uDAAJ,GAAI,oBAC9BC,KAAKC,KAAOH,EAAKI,OAAOC,IACrBC,MAAML,EAAQM,EAAGN,EAAQO,EAAG,QAC5BC,UAAU,GACVC,aAAa,IACbC,cAAc,KCkCNC,E,WArCb,WAAYZ,GAAqB,IAAfC,EAAc,uDAAJ,GAAI,oBAC9BC,KAAKW,OAASb,EAAKI,OAAOC,IACvBC,MAAML,EAAQM,EAAGN,EAAQO,EAAG,UAC5BM,SAAS,GACTC,SAASd,EAAQe,KAAO,GAAK,KAM7BC,eAAe,IAElBC,QAAQC,IAAIjB,KAAKW,QACjBX,KAAKW,OAAOO,KAAKC,YAAc,EAC/BnB,KAAKW,OAAOO,KAAKE,cAAe,EAChCpB,KAAKW,OAAOS,cAAe,EAE3BpB,KAAKF,KAAOA,EAEZE,KAAKF,KAAKuB,OAASrB,KAAKqB,OAAOC,KAAKtB,MAEpCA,KAAKuB,QAAUvB,KAAKF,KAAK0B,MAAMC,SAASC,mB,qDAIpC1B,KAAKuB,QAAQI,GAAGC,QAClB5B,KAAKW,OAAOkB,YAAY,EAAG,KAEzB7B,KAAKuB,QAAQO,KAAKF,QACpB5B,KAAKW,OAAOkB,YAAY,GAAI,S,KCsCnBE,E,WAhEb,aAAe,oBACb/B,KAAKgC,WAAa,IAClBhC,KAAKiC,YAAc,IAEnB,IAAIC,EAAS,CACXC,KAAMC,IAAOC,KACbC,MAAOtC,KAAKgC,WACZO,OAAQvC,KAAKiC,YACbO,QAAS,CACPC,QAAS,SACTvC,OAAQ,CACNwC,OAAO,EACPC,QAAS,CAAEtC,EAAG,EAAGC,EAAG,KAGxBsC,MAAO,CACLC,QAAS7C,KAAK6C,QACdC,OAAQ9C,KAAK8C,OACbzB,OAAQrB,KAAKqB,SAGjBrB,KAAKF,KAAO,IAAIsC,IAAOL,KAAKG,G,sDAI5BlC,KAAK+C,KAAK3C,MAAM,OAAQ,mBACxBJ,KAAK+C,KAAK3C,MAAM,SAAU,uBAC1BJ,KAAK+C,KAAK3C,MAAM,aAAc,2B,+BAI9BJ,KAAKE,OAAO8C,MAAMC,YAClBjD,KAAKkD,WAAalD,KAAKG,IACpBC,MAAM,EAAG,EAAG,cACZ+C,UAAU,EAAG,GACbvC,SAAS,IAEZZ,KAAKC,KAAO,IAAIJ,EAAKG,KAAM,CAAEK,EAAG,IAAKC,EAAG,MACxCN,KAAKoD,QAAU,IAAI1C,EAAOV,KAAM,CAC9BK,EAAG,IACHC,EAAG,MAGLN,KAAKqD,QAAU,IAAI3C,EAAOV,KAAM,CAC9BK,EAAG,IACHC,EAAG,KAGLN,KAAKsD,QAAU,IAAI5C,EAAOV,KAAM,CAC9BK,EAAG,IACHC,EAAG,MAGLN,KAAKuD,QAAU,IAAI7C,EAAOV,KAAM,CAC9BK,EAAG,IACHC,EAAG,Q,yCClDMkD,MAPf,WAIE,OAHAC,qBAAU,WACR,IAAI1B,IACH,IACI,sCCHT2B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.90bfb75f.chunk.js","sourcesContent":["class Ball {\n  constructor(game, options = {}) {\n    this.ball = game.matter.add\n      .image(options.x, options.y, \"ball\")\n      .setBounce(1)\n      .setVelocityX(40)\n      .setVelocityY(-20);\n  }\n}\n\nexport default Ball;\n","import Phaser from \"phaser\";\n\nclass Kicker {\n  constructor(game, options = {}) {\n    this.kicker = game.matter.add\n      .image(options.x, options.y, \"kicker\")\n      .setScale(1)\n      .setAngle(options.left ? 90 : 270)\n      //.setFriction(1)\n      //.setRestitution(1)\n      //.setFriction(0)\n      // .setFrictionStatic(1000)\n      //.setFrictionStatic(10)\n      .setFrictionAir(0.9);\n\n    console.log(this.kicker);\n    this.kicker.body.restitution = 1;\n    this.kicker.body.allowGravity = false;\n    this.kicker.allowGravity = false;\n\n    this.game = game;\n\n    this.game.update = this.update.bind(this);\n\n    this.cursors = this.game.input.keyboard.createCursorKeys();\n  }\n\n  update() {\n    if (this.cursors.up.isDown) {\n      this.kicker.setVelocity(0, 100);\n    }\n    if (this.cursors.down.isDown) {\n      this.kicker.setVelocity(0, -100);\n    }\n    /* if (this.game.input.keyboard.isDown('up')) {\n      console.log(\"top\");\n    }*/\n  }\n}\n\nexport default Kicker;\n","import Phaser from \"phaser\";\nimport Ball from \"./ball\";\nimport Kicker from \"./kicker\";\nlet matterInstance;\n\nclass Game {\n  constructor() {\n    this.GAME_WIDTH = 960;\n    this.GAME_HEIGHT = 540;\n\n    let config = {\n      type: Phaser.AUTO,\n      width: this.GAME_WIDTH,\n      height: this.GAME_HEIGHT,\n      physics: {\n        default: \"matter\",\n        matter: {\n          debug: true,\n          gravity: { x: 0, y: 0 }\n        }\n      },\n      scene: {\n        preload: this.preload,\n        create: this.create,\n        update: this.update\n      }\n    };\n    this.game = new Phaser.Game(config);\n  }\n\n  preload() {\n    this.load.image(\"ball\", \"assets/ball.png\");\n    this.load.image(\"kicker\", \"assets/kicker_1.png\");\n    this.load.image(\"background\", \"assets/background.png\");\n  }\n\n  create() {\n    this.matter.world.setBounds();\n    this.background = this.add\n      .image(0, 0, \"background\")\n      .setOrigin(0, 0)\n      .setScale(0.5);\n\n    this.ball = new Ball(this, { x: 100, y: 270 });\n    this.kicker1 = new Kicker(this, {\n      x: 930,\n      y: 260\n    });\n\n    this.kicker2 = new Kicker(this, {\n      x: 750,\n      y: 80\n    });\n\n    this.kicker3 = new Kicker(this, {\n      x: 750,\n      y: 260\n    });\n\n    this.kicker4 = new Kicker(this, {\n      x: 750,\n      y: 440\n    });\n\n    // this.figure2 = new Figure(this, { x: 600, y: 600 });\n  }\n\n  update() {}\n}\n\nexport default Game;\n","import React, { useEffect } from \"react\";\n\nimport Game from \"./game\";\n\nfunction App() {\n  useEffect(() => {\n    new Game();\n  }, []);\n  return <></>;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}